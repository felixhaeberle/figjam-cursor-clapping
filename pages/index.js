import { useEffect, useState } from 'react'

import Clap from '../components/Clap'
import Confetti from '../components/Confetti'
import Head from 'next/head'
import Mouse from '../components/Mouse'
import { generateRandomMousePosition } from '../helper/helper'
import styles from '../styles/Home.module.css'

export default function Home() {
    const [mousePosition, setMousePosition] = useState({});
    const [realMousePosition, setRealMousePosition] = useState({});
    const [clapping, setClapping] = useState(false);
    const [timeoutHasRun, setTimeoutHasRun] = useState(false);
    
    useEffect(() => {
      setMousePosition(generateRandomMousePosition());
    }, [])

    const handleMouseMove = (e) => { 
      setRealMousePosition({x: e.pageX, y: e.pageY});
      if(!clapping) {
        setClapping(((realMousePosition.x <= mousePosition.x + 10 && realMousePosition.x >= mousePosition.x - 10) && (realMousePosition.y <= mousePosition.y + 10 && realMousePosition.y >= mousePosition.y - 10)) ? true : false)
      } else {
        if(!timeoutHasRun) {
          setTimeoutHasRun(true)
          setTimeout(() => {
            setTimeoutHasRun(false)
            setClapping(false)
            setMousePosition(generateRandomMousePosition())
          }, 2000)
        }
      }
    }
    
    return (
      <div className={styles.container}>
        <Head>
          <title>FigJam Cursor Clapping</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div onMouseMove={(ev)=> handleMouseMove(ev)}>
          <h1>FigJam Cursor Clapping</h1>
          <p>Search the other cursor and give a high-five ✋</p>
          {/* <p>{ mousePosition.x }–{ mousePosition.y }</p>
          <p>{ realMousePosition.x }–{ realMousePosition.y }</p>
          <p>{ clapping ? 'clap' : 'silent' }</p> */}
          <Mouse position={{x: mousePosition.x, y: mousePosition.y}} />
          <Confetti position={{x: realMousePosition.x, y: realMousePosition.y}} {...{clapping }} />
          <Clap position={{x: realMousePosition.x, y: realMousePosition.y}} {...{clapping }} />
        </div>
      </div>
    )
}
